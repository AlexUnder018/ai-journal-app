// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql" // or "mysql", "cockroachdb", etc.
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Users {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  clerkId  String         @unique
  email    String         @unique
  entries  JournalEntry[]
  analyses Analysis[]
}

model JournalEntry {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user     Users     @relation(fields: [userId], references: [id])
  userId   String
  content  String    @db.Text
  Analysis Analysis?

  @@unique([userId, id])
}

model Analysis {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  entryId        String
  entry          JournalEntry @relation(references: [id], fields: [entryId], onDelete: Cascade)
  userId         String
  user           Users        @relation(fields: [userId], references: [id], onDelete: Cascade)
  mood           String
  summary        String       @db.Text
  color          String
  negative       Boolean
  subject        String
  sentimentScore Float        @default(0)

  @@unique([entryId])
  @@index([userId])
}
